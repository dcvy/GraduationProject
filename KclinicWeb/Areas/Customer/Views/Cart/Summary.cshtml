@model Kclinic.Models.ViewModels.ShoppingCartVM

@using Microsoft.Extensions.Options
@inject IOptions<Kclinic.Utility.StripeSettings> Stripe

<form method="post">
	<br />
	<div class="container">
		<div class="card">
			<div class="card-header bg-dark text-light ml-0">
				<div class=" row container">
					<div class="col-6">
						<i class="fa fa-shopping-cart"></i> &nbsp;
						Thanh toán hóa đơn
					</div>
					<div class="col-6 text-end">
						<a asp-action="Index" class="btn btn-outline-info btn-sm">Trở về giỏ hàng</a>
					</div>
				</div>
			</div>
			<div class="card-body">
				<div class="container rounded p-2">
					<div class="row">
						<div class="col-12 col-lg-6 pb-4">
							<div class="row">
								<h4 class="d-flex justify-content-between align-items-center mb-3">
									<span class="text-info">Chi tiết :</span>
								</h4>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Tên</label>
								</div>
								<div class="col-9">
									<input asp-for="OrderHeader.Name" class="form-control" />
									<span asp-validation-for="OrderHeader.Name" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Số điện thoại</label>
								</div>
								<div class="col-9">
									<input asp-for="OrderHeader.PhoneNumber" class="form-control" />
									<span asp-validation-for="OrderHeader.PhoneNumber" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Địa chỉ</label>
								</div>
								<div class="col-9">
									<input asp-for="OrderHeader.StreetAddress" class="form-control" />
									<span asp-validation-for="OrderHeader.StreetAddress" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Thành phố</label>
								</div>
								<div class="col-9">
									<input asp-for="OrderHeader.City" class="form-control" />
									<span asp-validation-for="OrderHeader.City" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>State</label>
								</div>
								<div class="col-9">
									<input asp-for="OrderHeader.State" class="form-control" />
									<span asp-validation-for="OrderHeader.State" class="text-danger"></span>
								</div>
							</div>
							<div class="row my-1">
								<div class="col-3">
									<label>Postal Code</label>
								</div>
								<div class="col-9">
									<input asp-for="OrderHeader.PostalCode" class="form-control" />
									<span asp-validation-for="OrderHeader.PostalCode" class="text-danger"></span>
								</div>
							</div>
						</div>
						<div class="col-12 col-lg-5 offset-lg-1">
							<h4 class="d-flex justify-content-between align-items-center mb-3">
								<span class="text-info">Thanh toán hóa đơn:</span>
							</h4>
							<ul class="list-group mb-3">
								@foreach (var details in Model.ListCart)
								{
									<li class="list-group-item d-flex justify-content-between">
										<div>
											<h6 class="my-0">@details.Product.Name</h6>
											<small class="text-muted">Quantity: @details.Count</small>
										</div>
										<span class="text-muted">@((details.Price * details.Count).ToString("")) </span>
									</li>
								}
								<li class="list-group-item d-flex justify-content-between bg-light">
									<small class="text-info">Tổng (USD)</small>
									<strong class="text-info" id="orderTotal">@Model.OrderHeader.OrderTotal.ToString("")</strong>
								</li>
							</ul>
						</div>
					</div>
				</div>
			</div>
			<div class="card-footer">
				<div class="row">
					<div class="col-12 col-md-8 pt-2">
					</div>
					<div class="col-12 col-md-4">
						<button type="submit" value="Place Order" class="btn btn-primary form-control">Thanh toán</button>
						<p><a asp-area="Customer" asp-controller="Cart" asp-action="CoinPayments">Coin Payments</a></p>
					</div>
				</div>
			</div>
		</div>
	</div>
</form>

<!-- Include the script to fetch the exchange rate -->

<script>
	// Function to fetch the exchange rate and update the token amount
	async function updateTokenAmount() {
		// Fetch the exchange rate from the API
		var exchangeRate = await fetch('https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD')
			.then(response => response.json())
			.then(data => data.USD)
			.catch(error => {
				console.error('Error fetching exchange rate:', error);
				return 0; // Use a default value or handle the error accordingly
			});

		// Calculate the equivalent token amount in ETH based on the exchange rate
		var orderTotalElement = document.getElementById('orderTotal');
		var tokenAmountInUSD = orderTotalElement ? parseFloat(orderTotalElement.innerText) || 0 : 0;
		var tokenAmountInETH = tokenAmountInUSD / exchangeRate;

		// Pass the token amount and exchange rate to the CoinPayments page
		localStorage.setItem('tokenAmountInETH', tokenAmountInETH.toFixed(6));
		localStorage.setItem('exchangeRate', exchangeRate);
	}

	// Initial update when the page loads
	updateTokenAmount();
</script>